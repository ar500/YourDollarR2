@page "{budgetId:guid}"
@using YourDollarR2.Core
@model YourDollarR2.Pages.Budgets.DetailModel
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Budget.CategoryGroups.Select(n => n.Category).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Budget.CategoryGroups.Select(t => t.TotalFunds).ToList());
    ViewData["Title"] = "Budget Detail";
}

@if (Model.Message != null)
{
    <div class="alert alert-info">@Model.Message</div>
}

<div class="card">
    <div class="card-img-top">
        <canvas id="pieChart" style="width: 10rem; height: 10rem;"></canvas>
    </div>
    <div class="card-body">
        <h3 class="card-title">@Model.Budget.ShortName</h3>
        <div>
            <h6 class="card-subtitle text-muted">
                @Model.Budget.CycleStartDate.ToString("d") through @Model.Budget.CycleEndDate.ToString("d")
            </h6>
        </div>
        <p class="text-md-center">@Model.Budget.Description</p>

        <div class="card mt-3 mb-3">
            <div class="card-body">
                <h3 class="card-title">Funds</h3>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-sm-2">Alloted in budget:</div>
                        <div class="col-sm-2">@Model.Budget.AllocatedFunds.ToString("C")</div>
                        <div class="col*-*"></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">Total Allocated</div>
                        <div class="col-sm-2">@Model.Budget.CategoryGroups.Sum(f => f.TotalFunds).ToString("C")</div>
                        <div class="col*-*"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card mt-0 mb-3">
            <div class="card-body">
                <h3 class="card-title">Category Breakdown</h3>
                <div class="container-fluid">
                    @foreach (var group in @Model.Budget.CategoryGroups)
                    {
                        <partial name="_ListExpenseCategory" model="group"/>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card-footer">
        <a asp-page="./List" class="btn btn-light">See all budgets.</a>
    </div>
</div>


@section Scripts
{
    <environment include="Development">
        <script src="~/node_modules/chart.js/dist/Chart.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/node_modules/chart.js/dist/Chart.js"></script>
    </environment>

    <script type="text/javascript">

    $(function () {
        var chartName = "pieChart";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                    labels: @Html.Raw(XLabels),
                    datasets: [{
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                            'rgba(75, 192, 192, 0.7)',
                            'rgba(153, 102, 255, 0.7)',
                            'rgba(255, 159, 64, 0.7)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderWidth: 0,
                        data: @Html.Raw(YValues)
                    }]
                };

        var options = {
            maintainAspectRatio: false,
            title: {
                display: false
            },
            legend: {
                display: false
            },
            cutoutPercentage: 60,
            animation: {
                animateScale: true
            }
        };

        var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type:'doughnut'
            });
        });
    </script>
}


